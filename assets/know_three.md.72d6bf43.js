import{o as n,c as s,d as a}from"./app.ed5dff4a.js";const p='{"title":"第三章 webgl 最简单的图形-画一个点","description":"","frontmatter":{},"headers":[{"level":2,"title":"现实中的绘图","slug":"现实中的绘图"},{"level":2,"title":"canvas 2d绘图","slug":"canvas-2d绘图"},{"level":2,"title":"webgl绘图","slug":"webgl绘图"},{"level":2,"title":"webgl 的绘图思路","slug":"webgl-的绘图思路"},{"level":2,"title":"webgl 的绘图步骤","slug":"webgl-的绘图步骤"}],"relativePath":"know/three.md","lastUpdated":1630893605344}',t={},e=[a('<h1 id="第三章-webgl-最简单的图形-画一个点"><a class="header-anchor" href="#第三章-webgl-最简单的图形-画一个点" aria-hidden="true">#</a> 第三章 webgl 最简单的图形-画一个点</h1><hr><h1 id="webgl-绘图的基本步骤"><a class="header-anchor" href="#webgl-绘图的基本步骤" aria-hidden="true">#</a> webgl 绘图的基本步骤</h1><hr><h2 id="现实中的绘图"><a class="header-anchor" href="#现实中的绘图" aria-hidden="true">#</a> 现实中的绘图</h2><p>     1. 找一张画布</p><p>     2. 找一支画笔</p><p>     3. 开始绘图</p><h2 id="canvas-2d绘图"><a class="header-anchor" href="#canvas-2d绘图" aria-hidden="true">#</a> canvas 2d绘图</h2><p>     // 1. canvas画布</p><p>     <code>const canvas = document.getElementById(&#39;canvas&#39;)</code></p><p>     // 2. 二维画笔</p><p>     <code>const ctx = canvas.getContext(&#39;2d&#39;)</code></p><p>     // 3. 设置画笔颜色</p><p>     <code>ctx.fillStyle = &#39;pink&#39;</code></p><p>     // 4. 用画笔画出一个矩形</p><p>     <code>ctx.fillRect(20,20,300,400)</code></p><h2 id="webgl绘图"><a class="header-anchor" href="#webgl绘图" aria-hidden="true">#</a> webgl绘图</h2><p>     webgl更像是电脑绘图,他绘画的步骤多了一层介质--手绘板(webgl里的程序对象),用触控笔在手绘板上画画,手绘板把画的东西发给电脑</p><p>     1. 找一台电脑</p><p>     2. 找一块手绘板</p><p>     3. 找一支触控笔</p><p>     4. 开始画画</p><h4 id="canvas-2d-和-webgl绘图的差异"><a class="header-anchor" href="#canvas-2d-和-webgl绘图的差异" aria-hidden="true">#</a> canvas 2d 和 webgl绘图的差异</h4><p>     浏览器有三大线程： js 引擎线程、GUI 渲染线程、浏览器事件触发线程。</p><p>     其中GUI 渲染线程就是用于渲图的,渲染二维图形用的是js语言,渲染三维图形用的是GLSL ES 语言。这个时候我们就需要找人翻译翻译---它就是我们之前提到过的手绘板，它在webgl 里叫“程序对象”。</p><h2 id="webgl-的绘图思路"><a class="header-anchor" href="#webgl-的绘图思路" aria-hidden="true">#</a> webgl 的绘图思路</h2><p>     1. 找一台电脑 --- 浏览器里内置的webgl 渲染引擎，负责渲染webgl 图形，只认GLSL ES语言。</p><p>     2. 找一块手绘板 --- 程序对象，承载GLSL ES语言，翻译GLSL ES语言和js语言，使两者可以相互通信。</p><p>     3. 找一支触控笔 --- 通过canvas 获取的webgl 类型的上下文对象，可以向手绘板传递绘图命令，并接收手绘板的状态信息。</p><p>     4. 开始画画 --- 通过webgl 类型的上下文对象，用js 画画。</p><h2 id="webgl-的绘图步骤"><a class="header-anchor" href="#webgl-的绘图步骤" aria-hidden="true">#</a> webgl 的绘图步骤</h2><p>     1. 在html中建立canvas 画布</p><p>     <code>&lt;canvas id=&quot;canvas&quot;&gt;&lt;/canvas&gt;</code></p><p>     2. 在js中获取canvas画布</p><p>     <code>const canvas=document.getElementById(&#39;canvas&#39;)</code></p><p>     3. 使用canvas 获取webgl 绘图上下文</p><p>     <code>const gl=canvas.getContext(&#39;webgl&#39;)</code></p><p>     4. 在script中建立顶点着色器和片元着色器，glsl es</p><p>     // 顶点着色器</p><div class="language-"><pre><code>&lt;script id=&quot;vertexShader&quot; type=&quot;x-shader/x-vertex&quot;&gt;\n    void main() {\n        gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n        gl_PointSize = 100.0;\n    }\n&lt;/script&gt;\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>     // 片元着色器</p><div class="language-"><pre><code>&lt;script id=&#39;fragmentShader&#39; type=&#39;x-shader/x-fragment&#39;&gt;\n  void main() {\n    gl_FragColor = vec4(1.0,1.0,0.0,1.0)\n  }\n&lt;/script&gt;\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>     5. 在js中获取顶点着色器和片元着色器的文本</p><p>     <code>const vsSource = document.getElementById(&#39;vertexShader&#39;).innerText</code></p><p>     <code>const fsSource = document.getElementById(&#39;fragmentShader&#39;).innerText</code></p><p>     6. 初始化着色器</p><p>     <code>initShader(gl,vsSource,fsSource)</code></p><p>     7. 指定将要用来清空绘图区的颜色</p><p>     <code>gl.clearColor(0,0,0,1)</code></p><p>     8. 使用之前指定的颜色，清空绘图区</p><p>     <code>gl.clear(gl.COLOR_BUFFER_BIT)</code></p><p>     9. 绘制顶点</p><p>     <code>gl.drawArrays(gl.POINTS,0,1)</code></p><p>     完整代码</p><div class="language-html line-numbers-mode"><pre><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n    <span class="token selector">*</span> <span class="token punctuation">{</span>\n      <span class="token property">margin</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>\n      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- 建立canvas画布 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>canvas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token comment">&lt;!-- 顶点着色器 --&gt;</span>\n  <span class="token comment">&lt;!-- 点位信息 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertexShader<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x-shader/x-vertex<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 点位 分号不能少 vec4表示4维向量</span>\n      gl_Position <span class="token operator">=</span> <span class="token function">vec4</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token comment">// 点的尺寸 分号不能少 浮点数</span>\n      gl_PointSize <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token comment">&lt;!-- 片元着色器 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fragmentShader<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x-shader/x-fragment<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 点的颜色 分号不能少</span>\n      gl_FragColor <span class="token operator">=</span> <span class="token function">vec4</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">// 获取canvas画布</span>\n    <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span>\n    <span class="token comment">// 设置canvas画布宽高</span>\n    canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth\n    canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight\n    <span class="token comment">// 使用canvas获取webgl绘图上下文 webgl画笔</span>\n    <span class="token keyword">const</span> gl <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;webgl&#39;</span><span class="token punctuation">)</span>\n    <span class="token comment">// 获取顶点着色器的文本</span>\n    <span class="token keyword">const</span> vsSource <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;vertexShader&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText\n    <span class="token comment">// 获取片元着色器的文本</span>\n    <span class="token keyword">const</span> fsSource <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;fragmentShader&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText\n    <span class="token comment">// 初始化着色器</span>\n    <span class="token comment">// 解析着色器文本,整合到程序对象里,关联webgl上下文对象,实现两种语言通信</span>\n    <span class="token function">initShader</span><span class="token punctuation">(</span>gl<span class="token punctuation">,</span>vsSource<span class="token punctuation">,</span>fsSource<span class="token punctuation">)</span>\n    <span class="token comment">// 指定将要用来清理绘图区的颜色</span>\n    gl<span class="token punctuation">.</span><span class="token function">clearColor</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span>\n    <span class="token comment">// 清理绘图区</span>\n    gl<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">COLOR_BUFFER_BIT</span><span class="token punctuation">)</span>\n    <span class="token comment">// 绘制顶点(绘制方式,从哪个点开始绘制,绘制需要使用到多少个点) `https://developer.mozilla.org/zh-CN/docs/Web/API/WebGLRenderingContext/drawArrays`</span>\n    gl<span class="token punctuation">.</span><span class="token function">drawArrays</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">POINTS</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">function</span> <span class="token function">initShader</span><span class="token punctuation">(</span><span class="token parameter">gl<span class="token punctuation">,</span>vsSource<span class="token punctuation">,</span>fsSource</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 创建程序对象,相当于前面提到的手绘板的外壳</span>\n      <span class="token keyword">const</span> program <span class="token operator">=</span> gl<span class="token punctuation">.</span><span class="token function">createProgram</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token comment">// 建立着色器对象,手绘板接收触控笔信号的零件,把触控笔的js---&gt;glsl es,然后让webgl渲染引擎识别显示</span>\n      <span class="token keyword">const</span> vertexShader <span class="token operator">=</span> <span class="token function">loadShader</span><span class="token punctuation">(</span>gl<span class="token punctuation">,</span>gl<span class="token punctuation">.</span><span class="token constant">VERTEX_SHADER</span><span class="token punctuation">,</span>vsSource<span class="token punctuation">)</span>\n      <span class="token keyword">const</span> fragmentShader <span class="token operator">=</span> <span class="token function">loadShader</span><span class="token punctuation">(</span>gl<span class="token punctuation">,</span>gl<span class="token punctuation">.</span><span class="token constant">FRAGMENT_SHADER</span><span class="token punctuation">,</span>fsSource<span class="token punctuation">)</span>\n      <span class="token comment">// 将顶点着色器和片元着色器对象装进程序对象里,完成手绘板拼装</span>\n      gl<span class="token punctuation">.</span><span class="token function">attachShader</span><span class="token punctuation">(</span>program<span class="token punctuation">,</span>vertexShader<span class="token punctuation">)</span>\n      gl<span class="token punctuation">.</span><span class="token function">attachShader</span><span class="token punctuation">(</span>program<span class="token punctuation">,</span>fragmentShader<span class="token punctuation">)</span>\n      <span class="token comment">// 连接webgl上下文对象和程序对象</span>\n      gl<span class="token punctuation">.</span><span class="token function">linkProgram</span><span class="token punctuation">(</span>program<span class="token punctuation">)</span>\n      <span class="token comment">// 启动程序对象</span>\n      gl<span class="token punctuation">.</span><span class="token function">useProgram</span><span class="token punctuation">(</span>program<span class="token punctuation">)</span>\n      <span class="token comment">// 将程序对象挂到上下文对象上</span>\n      gl<span class="token punctuation">.</span>program <span class="token operator">=</span> program\n      <span class="token keyword">return</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">function</span> <span class="token function">loadShader</span><span class="token punctuation">(</span><span class="token parameter">gl<span class="token punctuation">,</span>type<span class="token punctuation">,</span>source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 根据着色器类型,建立着色器对象</span>\n      <span class="token keyword">const</span> shader <span class="token operator">=</span> gl<span class="token punctuation">.</span><span class="token function">createShader</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>\n      <span class="token comment">// 将着色器源文件传入着色器对象中</span>\n      gl<span class="token punctuation">.</span><span class="token function">shaderSource</span><span class="token punctuation">(</span>shader<span class="token punctuation">,</span>source<span class="token punctuation">)</span>\n      <span class="token comment">// 编译着色器对象</span>\n      gl<span class="token punctuation">.</span><span class="token function">compileShader</span><span class="token punctuation">(</span>shader<span class="token punctuation">)</span>\n      <span class="token comment">// 返回着色器对象</span>\n      <span class="token keyword">return</span> shader\n    <span class="token punctuation">}</span>\n  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div><p>     封装公用函数到 jsm/utils.js</p><div class="language-javascript line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">initShader</span><span class="token punctuation">(</span><span class="token parameter">gl<span class="token punctuation">,</span>vsSource<span class="token punctuation">,</span>fsSource</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 创建程序对象,相当于前面提到的手绘板的外壳</span>\n  <span class="token keyword">const</span> program <span class="token operator">=</span> gl<span class="token punctuation">.</span><span class="token function">createProgram</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token comment">// 建立着色器对象,手绘板接收触控笔信号的零件,把触控笔的js---&gt;glsl es,然后让webgl渲染引擎识别显示</span>\n  <span class="token keyword">const</span> vertexShader <span class="token operator">=</span> <span class="token function">loadShader</span><span class="token punctuation">(</span>gl<span class="token punctuation">,</span>gl<span class="token punctuation">.</span><span class="token constant">VERTEX_SHADER</span><span class="token punctuation">,</span>vsSource<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> fragmentShader <span class="token operator">=</span> <span class="token function">loadShader</span><span class="token punctuation">(</span>gl<span class="token punctuation">,</span>gl<span class="token punctuation">.</span><span class="token constant">FRAGMENT_SHADER</span><span class="token punctuation">,</span>fsSource<span class="token punctuation">)</span>\n  <span class="token comment">// 将顶点着色器和片元着色器对象装进程序对象里,完成手绘板拼装</span>\n  gl<span class="token punctuation">.</span><span class="token function">attachShader</span><span class="token punctuation">(</span>program<span class="token punctuation">,</span>vertexShader<span class="token punctuation">)</span>\n  gl<span class="token punctuation">.</span><span class="token function">attachShader</span><span class="token punctuation">(</span>program<span class="token punctuation">,</span>fragmentShader<span class="token punctuation">)</span>\n  <span class="token comment">// 连接webgl上下文对象和程序对象</span>\n  gl<span class="token punctuation">.</span><span class="token function">linkProgram</span><span class="token punctuation">(</span>program<span class="token punctuation">)</span>\n  <span class="token comment">// 启动程序对象</span>\n  gl<span class="token punctuation">.</span><span class="token function">useProgram</span><span class="token punctuation">(</span>program<span class="token punctuation">)</span>\n  <span class="token comment">// 将程序对象挂到上下文对象上</span>\n  gl<span class="token punctuation">.</span>program <span class="token operator">=</span> program\n  <span class="token keyword">return</span> <span class="token boolean">true</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function">loadShader</span><span class="token punctuation">(</span><span class="token parameter">gl<span class="token punctuation">,</span>type<span class="token punctuation">,</span>source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 根据着色器类型,建立着色器对象</span>\n  <span class="token keyword">const</span> shader <span class="token operator">=</span> gl<span class="token punctuation">.</span><span class="token function">createShader</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>\n  <span class="token comment">// 将着色器源文件传入着色器对象中</span>\n  gl<span class="token punctuation">.</span><span class="token function">shaderSource</span><span class="token punctuation">(</span>shader<span class="token punctuation">,</span>source<span class="token punctuation">)</span>\n  <span class="token comment">// 编译着色器对象</span>\n  gl<span class="token punctuation">.</span><span class="token function">compileShader</span><span class="token punctuation">(</span>shader<span class="token punctuation">)</span>\n  <span class="token comment">// 返回着色器对象</span>\n  <span class="token keyword">return</span> shader\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span>initShader<span class="token punctuation">,</span>loadShader<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>     封装之后代码</p><div class="language-html line-numbers-mode"><pre><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n    <span class="token selector">*</span> <span class="token punctuation">{</span>\n      <span class="token property">margin</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>\n      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- 建立canvas画布 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>canvas<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token comment">&lt;!-- 顶点着色器 --&gt;</span>\n  <span class="token comment">&lt;!-- 点位信息 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertexShader<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x-shader/x-vertex<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 点位 分号不能少 vec表示4维向量</span>\n      gl_Position <span class="token operator">=</span> <span class="token function">vec4</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token comment">// 点的尺寸 分号不能少 浮点数</span>\n      gl_PointSize <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token comment">&lt;!-- 片元着色器 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fragmentShader<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x-shader/x-fragment<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 点的颜色 分号不能少</span>\n      gl_FragColor <span class="token operator">=</span> <span class="token function">vec4</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>module<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">import</span> <span class="token punctuation">{</span>initShader<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../jsm/utils.js&#39;</span>\n    <span class="token comment">// 获取canvas画布 </span>\n    <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;canvas&#39;</span><span class="token punctuation">)</span>\n    <span class="token comment">// 设置canvas画布宽高</span>\n    canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth\n    canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight\n    <span class="token comment">// 使用canvas获取webgl绘图上下文 webgl画笔</span>\n    <span class="token keyword">const</span> gl <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;webgl&#39;</span><span class="token punctuation">)</span>\n    <span class="token comment">// 获取顶点着色器的文本</span>\n    <span class="token keyword">const</span> vsSource <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;vertexShader&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText\n    <span class="token comment">// 获取片元着色器的文本</span>\n    <span class="token keyword">const</span> fsSource <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;fragmentShader&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText\n    <span class="token comment">// 初始化着色器</span>\n    <span class="token comment">// 解析着色器文本,整合到程序对象里,关联webgl上下文对象,实现两种语言通信</span>\n    <span class="token function">initShader</span><span class="token punctuation">(</span>gl<span class="token punctuation">,</span>vsSource<span class="token punctuation">,</span>fsSource<span class="token punctuation">)</span>\n    <span class="token comment">// 指定将要用来清理绘图区的颜色</span>\n    gl<span class="token punctuation">.</span><span class="token function">clearColor</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span>\n    <span class="token comment">// 清理绘图区</span>\n    gl<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">COLOR_BUFFER_BIT</span><span class="token punctuation">)</span>\n    <span class="token comment">// 绘制顶点(绘制方式,从哪个点开始绘制,绘制需要使用到多少个点) `https://developer.mozilla.org/zh-CN/docs/Web/API/WebGLRenderingContext/drawArrays`</span>\n    gl<span class="token punctuation">.</span><span class="token function">drawArrays</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">POINTS</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n\n    <span class="token comment">/*\n    *function initShader(gl,vsSource,fsSource) {\n    *  // 创建程序对象,相当于前面提到的手绘板的外壳\n    *  const program = gl.createProgram()\n    *  // 建立着色器对象,手绘板接收触控笔信号的零件,把触控笔的js---&gt;glsl es,然后让webgl渲染引擎识别显示\n    *  const vertexShader = loadShader(gl,gl.VERTEX_SHADER,vsSource)\n    *  const fragmentShader = loadShader(gl,gl.FRAGMENT_SHADER,fsSource)\n    *  // 将顶点着色器和片元着色器对象装进程序对象里,完成手绘板拼装\n    *  gl.attachShader(program,vertexShader)\n    *  gl.attachShader(program,fragmentShader)\n    *  // 连接webgl上下文对象和程序对象\n    *  gl.linkProgram(program)\n    *  // 启动程序对象\n    *  gl.useProgram(program)\n    *  // 将程序对象挂到上下文对象上\n    *  gl.program = program\n    *  return true\n    *}\n    *function loadShader(gl,type,source) {\n    *  // 根据着色器类型,建立着色器对象\n    *  const shader = gl.createShader(type)\n    *  // 将着色器源文件传入着色器对象中\n    *  gl.shaderSource(shader,source)\n    *  // 编译着色器对象\n    *  gl.compileShader(shader)\n    *  // 返回着色器对象\n    *  return shader\n    *}\n    */</span>\n  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br></div></div>',60)];t.render=function(a,p,t,c,o,l){return n(),s("div",null,e)};export{p as __pageData,t as default};
